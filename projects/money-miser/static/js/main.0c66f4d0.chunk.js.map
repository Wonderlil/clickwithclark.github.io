{"version":3,"sources":["components/Header.jsx","js/localStorage.js","components/Statement.jsx","components/StatementGroup.jsx","js/capitalizeFirstLetter.js","components/Main.jsx","js/getGroups.js","js/groupPerDate.js","components/App.jsx","index.js"],"names":["Header","className","src","alt","setLocalStorage","transactions","localStorage","setItem","JSON","stringify","getLocalStorage","parse","getItem","Statement","amount","date","id","name","type","onDeleteBtn","useState","statementOverviewClasses","isFocused","setIsFocused","hideDeleteBtn","e","statementRef","useRef","useEffect","document","addEventListener","event","someRef","current","contains","target","handleOutsideClick","join","onPointerUp","ref","onBlur","day","StatementGroup","statements","Object","keys","map","key","capitalizeFirstLetter","string","toUpperCase","slice","Main","sign","localStorageStatements","income","setIncome","expense","setExpense","balance","setBalance","setAmount","setName","dayjs","format","setDate","statementsState","setStatementsState","groups","setGroups","statementContainerClasses","setStatementContainerClasses","dateGroups","forEach","month","year","filter","group","includes","sort","a","b","isBefore","getGroups","length","item","amounts","value","push","total","reduce","accumulator","toFixed","newIncome","newExpense","handleDeleteBtn","dataset","statementsRemaining","theDate","index","perGroup","groupPerDate","onSubmit","preventDefault","statementName","getElementById","statementAmount","trim","alert","statement","tools","generateID","parseFloat","assign","addStatement","placeholder","onChange","step","defaultValue","min","handleIncomeBtn","handleExpenseBtn","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c66f4d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n  <div className=\"header-container\">\r\n    <h2>MONEY</h2>\r\n    <img src=\"./img/money-mi$er-logo_official.png\" className=\"logo\" alt=\"Logo\" />\r\n    <h2>MI$ER</h2>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","export function setLocalStorage(transactions) {\r\n  localStorage.setItem('transactions', JSON.stringify(transactions));\r\n}\r\nexport function getLocalStorage() {\r\n  const transactions = JSON.parse(localStorage.getItem('transactions')) ?? {};\r\n  return transactions;\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statement = ({ amount, date, id, name, type, onDeleteBtn }) => {\r\n  const [statementOverviewClasses, setStatementOverviewClasses] = useState(['statement-overview']);\r\n\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const showDeleteBtn = (e) => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const hideDeleteBtn = (e) => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  /* -------------------------------------------------------------------*/\r\n  // #region [handle click outside delete button to hide delete button]\r\n  /* -------------------------------------------------------------------*/\r\n  const statementRef = useRef(null);\r\n  useEffect(() => {\r\n    // Function for click event\r\n    function handleOutsideClick(event, someRef) {\r\n      if (!someRef?.current?.contains(event.target)) {\r\n        hideDeleteBtn(event);\r\n      }\r\n    }\r\n\r\n    // Adding click event listener\r\n    document.addEventListener('click', (event) => handleOutsideClick(event, statementRef));\r\n  }, [statementRef]);\r\n  /* -------------------------------------------------------------------*/\r\n  // #endregion [handle click outside delete button to hide delete button]\r\n  return (\r\n    <>\r\n      <div className={statementOverviewClasses.join(' ')} onPointerUp={(e) => showDeleteBtn(e)} ref={statementRef}>\r\n        <button\r\n          className={isFocused ? 'delete-btn delete-btn--visible' : 'delete-btn'}\r\n          data-id={id}\r\n          type=\"button\"\r\n          onPointerUp={(e) => onDeleteBtn(e)}\r\n          onBlur={(e) => hideDeleteBtn(e)}\r\n        >\r\n          âœ–\r\n        </button>\r\n        <div className=\"statement-date\">{date.day}</div>\r\n        <div className=\"statement-name-type\">\r\n          <div className=\"statement-name\">{name}</div>\r\n          <div className=\"statement-type\">{type}</div>\r\n        </div>\r\n        <div className={`statement-amount ${type === 'Income' ? 'plus' : 'minus'}`}>{amount}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nStatement.propTypes = {\r\n  amount: PropTypes.number,\r\n  date: PropTypes.object,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onDeleteBtn: PropTypes.func,\r\n};\r\n\r\nexport default Statement;\r\n","import PropTypes from 'prop-types';\r\nimport Statement from './Statement.jsx';\r\n\r\nconst StatementGroup = ({ statements, date, onDeleteBtn }) => (\r\n  <div className=\"transaction-group\">\r\n    <h2 className=\"group-heading\">{date}</h2>\r\n    {Object.keys(statements).map((key) => (\r\n      // eslint-disable-next-line react/jsx-props-no-spreading\r\n      <Statement key={key} {...statements[key]} onDeleteBtn={onDeleteBtn} />\r\n    ))}\r\n  </div>\r\n);\r\nStatementGroup.propTypes = {\r\n  statements: PropTypes.object,\r\n  date: PropTypes.string,\r\n  onDeleteBtn: PropTypes.func,\r\n};\r\n\r\nexport default StatementGroup;\r\n","// to always return type string event when string may be falsy other than empty-string\r\nexport const capitalizeFirstLetter = (string = '') => string && string[0].toUpperCase() + string.slice(1);\r\n","import { useEffect, useState } from 'react';\r\nimport { tools } from 'tools-clickwithclark';\r\nimport dayjs from 'dayjs';\r\nimport { getLocalStorage, setLocalStorage } from '../js/localStorage.js';\r\nimport StatementGroup from './StatementGroup.jsx';\r\nimport { getGroups } from '../js/getGroups';\r\nimport { capitalizeFirstLetter } from '../js/capitalizeFirstLetter';\r\nimport { groupPerDate } from '../js/groupPerDate';\r\n\r\ngetLocalStorage();\r\n\r\nconst Main = () => {\r\n  const localStorageStatements = getLocalStorage();\r\n\r\n  const [income, setIncome] = useState('0.00');\r\n  const [expense, setExpense] = useState('0.00');\r\n  const [balance, setBalance] = useState('0.00');\r\n  const [amount, setAmount] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [date, setDate] = useState(dayjs().format('YYYY-MM-DD'));\r\n  const [statementsState, setStatementsState] = useState(localStorageStatements);\r\n  const [groups, setGroups] = useState([]);\r\n  const [statementContainerClasses, setStatementContainerClasses] = useState(['statement-container']);\r\n  /* -------------------------------------------------------------------*/\r\n  // #region [adding scroll based on statement count]\r\n  /* -------------------------------------------------------------------*/\r\n\r\n  useEffect(() => {\r\n    setGroups(getGroups(statementsState));\r\n    // eslint-disable-next-line no-unused-expressions\r\n    Object.keys(localStorageStatements).length > 2\r\n      ? setStatementContainerClasses([...statementContainerClasses, 'scroll'])\r\n      : setStatementContainerClasses(statementContainerClasses.filter((item) => item !== 'scroll'));\r\n  }, [statementsState]);\r\n\r\n  /* -------------------------------------------------------------------*/\r\n  // #endregion [adding scroll based on statement count]\r\n\r\n  useEffect(() => {\r\n    // calculate total amount\r\n    const amounts = [];\r\n    Object.keys(statementsState).forEach((value) => amounts.push(statementsState[value].amount));\r\n    // eslint-disable-next-line no-param-reassign\r\n    const total = amounts.reduce((accumulator, item) => (accumulator += item), 0).toFixed(2);\r\n    setBalance(total);\r\n\r\n    // calculate income amount\r\n    const newIncome = amounts\r\n      .filter((item) => item > 0)\r\n      // eslint-disable-next-line no-param-reassign\r\n      .reduce((accumulator, item) => (accumulator += item), 0)\r\n      .toFixed(2);\r\n    setIncome(newIncome);\r\n\r\n    // calculate expense  amount\r\n    // eslint-disable-next-line no-param-reassign\r\n    const newExpense = (amounts.filter((item) => item < 0).reduce((accumulator, item) => (accumulator += item), 0) * -1).toFixed(2);\r\n\r\n    setExpense(newExpense);\r\n  }, [statementsState]);\r\n\r\n  let sign;\r\n\r\n  const handleIncomeBtn = (e) => {\r\n    e.preventDefault();\r\n    sign = '+';\r\n  };\r\n\r\n  const handleExpenseBtn = (e) => {\r\n    e.preventDefault();\r\n    sign = '-';\r\n  };\r\n  const handleDeleteBtn = (e) => {\r\n    const { id } = e.target.dataset;\r\n    const statementsRemaining = getLocalStorage();\r\n    delete statementsRemaining[id];\r\n    setLocalStorage(statementsRemaining);\r\n    setStatementsState(statementsRemaining);\r\n  };\r\n\r\n  function addStatement(e) {\r\n    e.preventDefault();\r\n    const statementName = document.getElementById('name');\r\n    const statementAmount = document.getElementById('amount');\r\n    const statements = getLocalStorage();\r\n\r\n    // ensure user chose income or expense\r\n    if (!sign) {\r\n      alert('Please ensure statement is Income or Expense');\r\n      return;\r\n    }\r\n    if (statementName.value.trim() === '' || statementAmount.value.trim() === '') {\r\n      alert('Please add a name and amount');\r\n    } else {\r\n      const statement = {\r\n        id: tools.generateID(),\r\n        name: capitalizeFirstLetter(statementName.value.trim()),\r\n        amount: +parseFloat(sign === '+' ? statementAmount.value : statementAmount.value * -1).toFixed(2),\r\n        type: sign === '+' ? 'Income' : 'Expense',\r\n        date: {\r\n          day: dayjs(date).format('DD'),\r\n          month: dayjs(date).format('MMM'),\r\n          year: dayjs(date).format('YYYY'),\r\n        },\r\n      };\r\n\r\n      Object.assign(statements, { [statement.id]: statement });\r\n      setLocalStorage(statements);\r\n      setStatementsState(statements);\r\n      setName('');\r\n      setAmount('');\r\n    }\r\n  }\r\n  // Main>statementGroup>Statement\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"balance-inc-exp-container\">\r\n        <div className=\"balance-container\">\r\n          <h4>Your Balance</h4>\r\n          <p id=\"balance\">${balance}</p>\r\n        </div>\r\n\r\n        <div className=\"income-container\">\r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">\r\n            +${income}\r\n          </p>\r\n        </div>\r\n        <div className=\"expense-container\">\r\n          <h4>Expense</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">\r\n            -${expense}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <h3>Statements</h3>\r\n      <div className={statementContainerClasses.join(' ')}>\r\n        {groups.map((theDate, index) => {\r\n          const perGroup = groupPerDate(statementsState, theDate);\r\n          return <StatementGroup key={index} statements={{ ...perGroup }} date={theDate} onDeleteBtn={handleDeleteBtn} />;\r\n        })}\r\n      </div>\r\n\r\n      <h3>Add New Statement</h3>\r\n      <form id=\"form\" onSubmit={(e) => addStatement(e)}>\r\n        <div className=\"form-control\">\r\n          <input type=\"text\" id=\"name\" placeholder=\"Enter name...\" onChange={(event) => setName(event.target.value)} value={name} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            placeholder=\"Enter amount...\"\r\n            step=\"0.01\"\r\n            onChange={(event) => setAmount(event.target.value)}\r\n            value={amount}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"date\"\r\n            className=\"date-picker\"\r\n            id=\"date\"\r\n            onChange={(event) => setDate(event.target.value)}\r\n            defaultValue={date}\r\n            min=\"2000-01-01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"income-or-expense-container\">\r\n          <button className=\"income-btn\" onPointerUp={(e) => handleIncomeBtn(e)} type=\"submit\">\r\n            income\r\n          </button>\r\n          <button className=\"expense-btn\" onPointerUp={(e) => handleExpenseBtn(e)} type=\"submit\">\r\n            expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import dayjs from 'dayjs';\r\n\r\nexport function getGroups(statementsState) {\r\n  let dateGroups = [];\r\n\r\n  Object.keys(statementsState).forEach((key) => {\r\n    dateGroups = [\r\n      ...dateGroups,\r\n      ...[`${statementsState[key].date.month} ${statementsState[key].date.year}`].filter((group) => !dateGroups.includes(group)),\r\n    ];\r\n  });\r\n\r\n  // Decending order sort: so latest groups by date shown first\r\n  dateGroups.sort((a, b) => (dayjs(a).isBefore(dayjs(b)) ? 1 : -1));\r\n\r\n  return dateGroups;\r\n}\r\n","export function groupPerDate(statementsState, date) {\r\n  const perGroup = {};\r\n  Object.keys(statementsState).forEach((key) => {\r\n    if (`${statementsState[key].date.month} ${statementsState[key].date.year}` === date) {\r\n      return (perGroup[key] = statementsState[key]);\r\n    }\r\n  });\r\n  return perGroup;\r\n}\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Header />\r\n    <Main />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './css/style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}